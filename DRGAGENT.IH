
/*
 * This file was generated by the SOM Compiler.
 * FileName: drgagent.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef DrgAgent_ih
#define DrgAgent_ih


/*
 * Passthru lines: File: "C.ih", "before"
 */

   #define INCL_DOSPROCESS
   #define INCL_WINMENUS
   #define INCL_WINWORKPLACE
   #include <os2.h>
   #include <stdio.h>
   #include <stdlib.h>
   #include <wpfolder.h>
   #include "drgagent.rh"


#include "DrgAgent.h"

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass DrgAgentCClassData.parentMtab
#endif

#define DrgAgent_MaxNoMethods 0

/*
 * Instance data
 */
typedef struct {
	HWND hwndComm;
} DrgAgentData;

/*
 * Instance variable access macros
 */
#define _hwndComm (somThis->hwndComm)

/*
 * Getdata macro
 */
#define DrgAgentGetData(somSelf) \
    ((DrgAgentData *) \
        SOM_DataResolve(somSelf, DrgAgentCClassData.instanceDataToken))

/*
 * Trace/Debug macro
 */
#ifndef DrgAgentMethodDebug
#define DrgAgentMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef DrgAgent_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_DrgAgentCClassData.parentMtab
#undef SOMInstance
#define SOMInstance DrgAgentCClassData.parentMtab

#ifndef M_DrgAgent_Class_Source
#define M_DrgAgent_Class_Source
#endif    /* M_DrgAgent_Class_Source */

/*
 * Generate the Apply Stubs.
 */

/*
 * Overridden method: wpDraggedOverObject
 */
#pragma linkage(Agent_wpDraggedOverObject, system)
SOM_Scope MRESULT   SOMLINK Agent_wpDraggedOverObject(DrgAgent *somSelf,
		WPObject *DraggedOverObject);
#ifndef parent_wpDraggedOverObject
static char *somMN_wpDraggedOverObject = "wpDraggedOverObject";
static somId somId_wpDraggedOverObject = &somMN_wpDraggedOverObject;
#define parent_wpDraggedOverObject(somSelf,DraggedOverObject) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpDraggedOverObject)) \
	 (somSelf,DraggedOverObject))
#endif
#define DrgAgentParent_wpDraggedOverObject parent_wpDraggedOverObject

/*
 * Overridden method: wpDroppedOnObject
 */
#pragma linkage(Agent_wpDroppedOnObject, system)
SOM_Scope BOOL   SOMLINK Agent_wpDroppedOnObject(DrgAgent *somSelf,
		WPObject *DroppedOnObject);
#ifndef parent_wpDroppedOnObject
static char *somMN_wpDroppedOnObject = "wpDroppedOnObject";
static somId somId_wpDroppedOnObject = &somMN_wpDroppedOnObject;
#define parent_wpDroppedOnObject(somSelf,DroppedOnObject) \
	((SOM_ParentResolveE(WPObject, SOM_CurrentClass, wpDroppedOnObject)) \
	 (somSelf,DroppedOnObject))
#endif
#define DrgAgentParent_wpDroppedOnObject parent_wpDroppedOnObject

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure DrgAgenttempClassData;

/*
 * Initialize the class data structure
 */
struct DrgAgentClassDataStructure DrgAgentClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct DrgAgentCClassDataStructure DrgAgentCClassData = {(somMethodTab *) NULL};

/*
 * Routines to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t DrgAgentOM[] = {
    {    &somId_wpDraggedOverObject,
         (somMethodProc *) Agent_wpDraggedOverObject    },
    {    &somId_wpDroppedOnObject,
         (somMethodProc *) Agent_wpDroppedOnObject    },
};

static void DrgAgentsomInitializeClass ()
{
	int i;
	somOverrideMethod_t *omp;

/*
 * Override methods.
 */
	for (omp = DrgAgentOM, i = 0; i < 2; omp++, i++)
	    _somOverrideSMethod (DrgAgenttempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(DrgAgentsomCreateClass, system)
static void SOMLINK DrgAgentsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    DrgAgenttempClassData.classObject = _somNew (mClsObj);
    _somInitClass (DrgAgenttempClassData.classObject,
		"DrgAgent",
		pClsObj,
		sizeof(DrgAgentData),
		DrgAgent_MaxNoMethods,
		DrgAgent_MajorVersion,
		DrgAgent_MinorVersion);
    DrgAgentCClassData.instanceDataToken = 
	_somGetInstanceToken(DrgAgenttempClassData.classObject);
    DrgAgentsomInitializeClass();
    DrgAgentCClassData.parentMtab =
	_somGetPClsMtab(DrgAgenttempClassData.classObject);
    _somSetClassData(DrgAgenttempClassData.classObject, (somClassDataStructure *)&DrgAgentClassData);
    _somClassReady(DrgAgenttempClassData.classObject);
    /* make newly created class object visible */
    DrgAgentClassData.classObject = DrgAgenttempClassData.classObject;
}

DrgAgent * SOMLINK DrgAgentNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != DrgAgent_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > DrgAgent_MinorVersion))) {
	somPrintf("DrgAgentNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (DrgAgentClassData.classObject != (SOMAny *) NULL)
	return(DrgAgentClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    WPAbstractNewClass(1,2);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("WPAbstract"), 1, 2);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Explicit metaclass, so get it */ 
    M_DrgAgentNewClass(0,0);	/* static reference */
    mClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_DrgAgent"), 0, 0);
    if (mClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoMetaClass);

    somConstructClass(DrgAgentsomCreateClass, pClsObj, mClsObj,
		     &DrgAgenttempClassData);
    return (DrgAgentClassData.classObject);
}

#endif                   /* DrgAgent_Class_Source */

#endif       /* DrgAgent_ih */

/*
 * This file was generated by the SOM Compiler.
 * FileName: drgagent.ih.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitih: 1.59
 */

#ifndef DrgAgent_mih
#define DrgAgent_mih


/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#ifdef __cplusplus
#define SOM_Scope extern "C"
#else
#define SOM_Scope extern
#endif
#endif

#ifndef SOM_CurrentClass
#define SOM_CurrentClass M_DrgAgentCClassData.parentMtab
#endif

#define M_DrgAgent_MaxNoMethods 0

/*
 * Instance data
 */
typedef void M_DrgAgentData;

/*
 * Trace/Debug macro
 */
#ifndef M_DrgAgentMethodDebug
#define M_DrgAgentMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * Begin stuff that only goes in the primary file
 */
#ifdef M_DrgAgent_Class_Source

/*
 * Current class macros for Instance and Meta classes.
 */

/*
 * Generate the Apply Stubs.
 */

/*
 * Overridden method: wpclsQueryIconData
 */
#pragma linkage(AgentCls_wpclsQueryIconData, system)
SOM_Scope ULONG   SOMLINK AgentCls_wpclsQueryIconData(M_DrgAgent *somSelf,
		PICONINFO pIconInfo);
#ifndef parent_wpclsQueryIconData
static char *somMN_wpclsQueryIconData = "wpclsQueryIconData";
static somId somId_wpclsQueryIconData = &somMN_wpclsQueryIconData;
#define parent_wpclsQueryIconData(somSelf,pIconInfo) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsQueryIconData)) \
	 (somSelf,pIconInfo))
#endif
#define M_DrgAgentParent_wpclsQueryIconData parent_wpclsQueryIconData

/*
 * Overridden method: wpclsQueryStyle
 */
#pragma linkage(AgentCls_wpclsQueryStyle, system)
SOM_Scope ULONG   SOMLINK AgentCls_wpclsQueryStyle(M_DrgAgent *somSelf);
#ifndef parent_wpclsQueryStyle
static char *somMN_wpclsQueryStyle = "wpclsQueryStyle";
static somId somId_wpclsQueryStyle = &somMN_wpclsQueryStyle;
#define parent_wpclsQueryStyle(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsQueryStyle)) \
	 (somSelf))
#endif
#define M_DrgAgentParent_wpclsQueryStyle parent_wpclsQueryStyle

/*
 * Overridden method: wpclsQueryTitle
 */
#pragma linkage(AgentCls_wpclsQueryTitle, system)
SOM_Scope PSZ   SOMLINK AgentCls_wpclsQueryTitle(M_DrgAgent *somSelf);
#ifndef parent_wpclsQueryTitle
static char *somMN_wpclsQueryTitle = "wpclsQueryTitle";
static somId somId_wpclsQueryTitle = &somMN_wpclsQueryTitle;
#define parent_wpclsQueryTitle(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsQueryTitle)) \
	 (somSelf))
#endif
#define M_DrgAgentParent_wpclsQueryTitle parent_wpclsQueryTitle

/*
 * Overridden method: wpclsInitData
 */
#pragma linkage(AgentCls_wpclsInitData, system)
SOM_Scope void   SOMLINK AgentCls_wpclsInitData(M_DrgAgent *somSelf);
#ifndef parent_wpclsInitData
static char *somMN_wpclsInitData = "wpclsInitData";
static somId somId_wpclsInitData = &somMN_wpclsInitData;
#define parent_wpclsInitData(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsInitData)) \
	 (somSelf))
#endif
#define M_DrgAgentParent_wpclsInitData parent_wpclsInitData

/*
 * Overridden method: wpclsUnInitData
 */
#pragma linkage(AgentCls_wpclsUnInitData, system)
SOM_Scope void   SOMLINK AgentCls_wpclsUnInitData(M_DrgAgent *somSelf);
#ifndef parent_wpclsUnInitData
static char *somMN_wpclsUnInitData = "wpclsUnInitData";
static somId somId_wpclsUnInitData = &somMN_wpclsUnInitData;
#define parent_wpclsUnInitData(somSelf) \
	((SOM_ParentResolveE(M_WPObject, SOM_CurrentClass, wpclsUnInitData)) \
	 (somSelf))
#endif
#define M_DrgAgentParent_wpclsUnInitData parent_wpclsUnInitData

/*
 * Temporary class data structure used only in class creation
 */
static somClassDataStructure M_DrgAgenttempClassData;

/*
 * Initialize the class data structure
 */
struct M_DrgAgentClassDataStructure M_DrgAgentClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct M_DrgAgentCClassDataStructure M_DrgAgentCClassData = {(somMethodTab *) NULL};

/*
 * Routines to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t M_DrgAgentOM[] = {
    {    &somId_wpclsQueryIconData,
         (somMethodProc *) AgentCls_wpclsQueryIconData    },
    {    &somId_wpclsQueryStyle,
         (somMethodProc *) AgentCls_wpclsQueryStyle    },
    {    &somId_wpclsQueryTitle,
         (somMethodProc *) AgentCls_wpclsQueryTitle    },
    {    &somId_wpclsInitData,
         (somMethodProc *) AgentCls_wpclsInitData    },
    {    &somId_wpclsUnInitData,
         (somMethodProc *) AgentCls_wpclsUnInitData    },
};

static void M_DrgAgentsomInitializeClass ()
{
	int i;
	somOverrideMethod_t *omp;

/*
 * Override methods.
 */
	for (omp = M_DrgAgentOM, i = 0; i < 5; omp++, i++)
	    _somOverrideSMethod (M_DrgAgenttempClassData.classObject,
	        *(omp->methodId), omp->method);

}

#pragma linkage(M_DrgAgentsomCreateClass, system)
static void SOMLINK M_DrgAgentsomCreateClass(SOMClass *pClsObj,
                           SOMClass *mClsObj)
{
    M_DrgAgenttempClassData.classObject = _somNew (mClsObj);
    _somInitClass (M_DrgAgenttempClassData.classObject,
		"M_DrgAgent",
		pClsObj,
		0,
		M_DrgAgent_MaxNoMethods,
		M_DrgAgent_MajorVersion,
		M_DrgAgent_MinorVersion);
    M_DrgAgentCClassData.instanceDataToken = 
	_somGetInstanceToken(M_DrgAgenttempClassData.classObject);
    M_DrgAgentsomInitializeClass();
    M_DrgAgentCClassData.parentMtab =
	_somGetPClsMtab(M_DrgAgenttempClassData.classObject);
    _somSetClassData(M_DrgAgenttempClassData.classObject, (somClassDataStructure *)&M_DrgAgentClassData);
    _somClassReady(M_DrgAgenttempClassData.classObject);
    /* make newly created class object visible */
    M_DrgAgentClassData.classObject = M_DrgAgenttempClassData.classObject;
}

M_DrgAgent * SOMLINK M_DrgAgentNewClass (integer4 scemajorVersion,
		integer4 sceminorVersion)
{
    SOMClass *pClsObj;
    SOMClass *mClsObj;

    /* Check the version numbers */
    if (((scemajorVersion != 0) && 
         (scemajorVersion != M_DrgAgent_MajorVersion)) ||
        ((sceminorVersion != 0) && 
         (sceminorVersion > M_DrgAgent_MinorVersion))) {
	somPrintf("M_DrgAgentNewClass: Error, bad version numbers.\n");
	SOM_Error(SOMERROR_BadVersion);
    }
    /* Don't do anything if class object is already created. */
    if (M_DrgAgentClassData.classObject != (SOMAny *) NULL)
	return(M_DrgAgentClassData.classObject);

    /* Make sure the environment is initialized. */
    if (SOMClassMgrObject == (SOMAny *) NULL) somEnvironmentNew();
    if (SOMClassMgrObject == (SOMAny *) NULL)
	SOM_Error(SOMERROR_CouldNotStartup);

    /* Get the parent class object. */
    M_WPAbstractNewClass(1,2);	/* static reference */
    pClsObj = _somFindClass(SOMClassMgrObject,
		SOM_IdFromString("M_WPAbstract"), 1, 2);
    if (pClsObj == (SOMClass *) NULL)
	SOM_Error(SOMERROR_NoParentClass);

    /* Use parent's metaclass */ 
    mClsObj = SOM_GetClass(pClsObj);

    somConstructClass(M_DrgAgentsomCreateClass, pClsObj, mClsObj,
		     &M_DrgAgenttempClassData);
    return (M_DrgAgentClassData.classObject);
}

#endif                   /* M_DrgAgent_Class_Source */

#endif       /* DrgAgent_ih */
